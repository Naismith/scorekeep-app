create table "public"."games" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "title" character varying,
    "maxScore" bigint,
    "countOfGameRounds" bigint,
    "reversedScoring" boolean,
    "showInterimResults" boolean,
    "showGameRounds" boolean,
    "scores" jsonb,
    "status" text,
    "user_id" uuid
);


alter table "public"."games" enable row level security;

create table "public"."games_players" (
    "game" bigint not null,
    "player" bigint not null,
    "user_id" uuid
);


alter table "public"."games_players" enable row level security;

CREATE UNIQUE INDEX games_pkey ON public.games USING btree (id);

CREATE UNIQUE INDEX games_players_pkey ON public.games_players USING btree (game, player);

alter table "public"."games" add constraint "games_pkey" PRIMARY KEY using index "games_pkey";

alter table "public"."games_players" add constraint "games_players_pkey" PRIMARY KEY using index "games_players_pkey";

alter table "public"."games" add constraint "games_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."games" validate constraint "games_user_id_fkey";

alter table "public"."games_players" add constraint "games_players_game_fkey" FOREIGN KEY (game) REFERENCES games(id) not valid;

alter table "public"."games_players" validate constraint "games_players_game_fkey";

alter table "public"."games_players" add constraint "games_players_player_fkey" FOREIGN KEY (player) REFERENCES players(id) not valid;

alter table "public"."games_players" validate constraint "games_players_player_fkey";

alter table "public"."games_players" add constraint "games_players_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."games_players" validate constraint "games_players_user_id_fkey";


